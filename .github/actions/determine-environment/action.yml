name: 'Determine Environment'
description: 'Determine environment, tag, node-env, and optional EC2 instance id from branch or inputs'

inputs:
  default-ec2-instance-id:
    description: 'Default EC2 instance id to output when needed'
    required: false
    default: ''

outputs:
  environment:
    description: 'Resolved environment (staging|production)'
    value: ${{ steps.determine.outputs.environment }}
  tag:
    description: 'Resolved Docker tag (staging|production)'
    value: ${{ steps.determine.outputs.tag }}
  node-env:
    description: 'Resolved NODE_ENV (staging|production)'
    value: ${{ steps.determine.outputs.node-env }}
  ec2-instance-id:
    description: 'Resolved EC2 instance id (if provided)'
    value: ${{ steps.determine.outputs.ec2-instance-id }}

runs:
  using: 'composite'
  steps:
    - id: determine
      name: Determine environment
      shell: bash
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.environment }}" ]]; then
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          TAG="${{ github.event.inputs.environment }}"
        else
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [[ "$BRANCH" == "master" ]]; then
            ENVIRONMENT="production"
            TAG="production"
          else
            ENVIRONMENT="staging"
            TAG="staging"
          fi
        fi

        if [[ "$ENVIRONMENT" == "production" ]]; then
          NODE_ENV_OUT="production"
        else
          NODE_ENV_OUT="staging"
        fi

        echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "node-env=$NODE_ENV_OUT" >> $GITHUB_OUTPUT
        echo "ec2-instance-id=${{ inputs.default-ec2-instance-id }}" >> $GITHUB_OUTPUT

