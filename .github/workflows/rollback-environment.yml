name: Rollback Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to rollback'
        required: true
        type: choice
        options:
          - development
          - staging
          - production
      rollback_to_commit:
        description: 'Commit hash to rollback to (optional)'
        required: false
        type: string
      confirm_rollback:
        description: 'Confirm rollback (type "ROLLBACK" to confirm)'
        required: true
        type: string

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: us-east-1
  ECR_REGISTRY: 762233763891.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: soundbite-development-api

jobs:
  validate-rollback:
    name: Validate Rollback
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate rollback confirmation
      run: |
        if [[ "${{ github.event.inputs.confirm_rollback }}" != "ROLLBACK" ]]; then
          echo "‚ùå Rollback not confirmed. Please type 'ROLLBACK' to confirm."
          exit 1
        fi
        echo "‚úÖ Rollback confirmed"
        
    - name: Validate commit hash
      if: github.event.inputs.rollback_to_commit != ''
      run: |
        if ! git cat-file -e "${{ github.event.inputs.rollback_to_commit }}:package.json" 2>/dev/null; then
          echo "‚ùå Invalid commit hash: ${{ github.event.inputs.rollback_to_commit }}"
          exit 1
        fi
        echo "‚úÖ Commit hash is valid"

  rollback-deployment:
    name: Rollback Deployment
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [validate-rollback]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for rollback
        
    - name: Checkout to rollback commit
      if: github.event.inputs.rollback_to_commit != ''
      run: |
        git checkout ${{ github.event.inputs.rollback_to_commit }}
        echo "‚úÖ Checked out to commit: ${{ github.event.inputs.rollback_to_commit }}"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::762233763891:role/GitHubActionsRole
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Rollback infrastructure
      run: |
        cd cdk
        CDK_ENVIRONMENT=${{ github.event.inputs.environment }} npx cdk deploy --all --require-approval never
        
    - name: Get deployment outputs
      id: deployment-outputs
      run: |
        API_INSTANCE_ID=$(aws cloudformation describe-stacks \
          --stack-name SoundBite-${{ github.event.inputs.environment }}-API \
          --query 'Stacks[0].Outputs[?OutputKey==`ApiInstanceId`].OutputValue' \
          --output text 2>/dev/null || echo "N/A")
        echo "api-instance-id=$API_INSTANCE_ID" >> $GITHUB_OUTPUT
        
    - name: Verify rollback
      if: steps.deployment-outputs.outputs.api-instance-id != 'N/A'
      run: |
        # Wait for EC2 instance to be ready
        aws ec2 wait instance-running --instance-ids ${{ steps.deployment-outputs.outputs.api-instance-id }}
        
        # Get public IP
        PUBLIC_IP=$(aws ec2.describe-instances \
          --instance-ids ${{ steps.deployment-outputs.outputs.api-instance-id }} \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)
        
        # Test health endpoint
        sleep 30  # Wait for application to start
        curl -f http://$PUBLIC_IP/health || {
          echo "‚ùå Health check failed after rollback"
          exit 1
        }
        
        echo "‚úÖ Rollback verified successfully"
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Instance ID: ${{ steps.deployment-outputs.outputs.api-instance-id }}"
        echo "Public IP: $PUBLIC_IP"
        echo "Health Check: http://$PUBLIC_IP/health"

  notify-rollback:
    name: Notify Rollback
    runs-on: ubuntu-latest
    needs: [rollback-deployment]
    if: always()
    
    steps:
    - name: Notify rollback completion
      run: |
        echo "üîÑ Environment rollback completed!"
        echo "Environment: ${{ github.event.inputs.environment }}"
        echo "Rollback to commit: ${{ github.event.inputs.rollback_to_commit || 'latest' }}"
        echo "Triggered by: ${{ github.actor }}"
        echo "Time: $(date)"
