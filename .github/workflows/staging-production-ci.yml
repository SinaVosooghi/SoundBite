name: Staging/Production CI

# This workflow handles CI for staging and production environments:
# - Runs unit tests (no LocalStack - uses real AWS services)
# - Builds and tests production Docker containers
# - Pushes production images to ECR (staging branch only)
# - Supports both direct pushes and pull requests

on:
  push:
    branches: [ staging, master ]
  pull_request:
    branches: [ staging, master ]
    types: [ opened, synchronize, reopened ]

permissions:
  contents: read
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Node.js Configuration
  NODE_VERSION: '22'
  YARN_VERSION: '4.9.4'
  
  # AWS Configuration
  AWS_REGION: us-east-1
  AWS_ACCOUNT_ID: 762233763891
  ECR_REGISTRY: 762233763891.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: soundbite-development-api
  
  # AWS Service Configuration
  TABLE_NAME: SoundbitesTable
  QUEUE_NAME: SoundbiteQueue
  S3_BUCKET: soundbitesbucket
  
  
  # Docker Configuration
  DOCKER_PROD_FILE: ./Dockerfile
  CONTAINER_PORT: 3001
  HEALTH_CHECK_PORT: 3001
  
  # AWS IAM Configuration
  AWS_ROLE_NAME: GitHubActions-SoundBite-Prod
  
  # Test Configuration
  TEST_TIMEOUT: 30
  HEALTH_CHECK_TIMEOUT: 30

jobs:
  test-and-push:
    name: Test, Build, and Push to ECR
    runs-on: ubuntu-latest
    timeout-minutes: 30
    # Only run on staging/master branches or PRs targeting them
    # Skip if PR is from dev to master (should go through staging first)
    if: |
      github.ref == 'refs/heads/staging' || 
      github.ref == 'refs/heads/master' || 
      (github.event_name == 'pull_request' && 
       (github.base_ref == 'staging' || github.base_ref == 'master') &&
       !(github.head_ref == 'dev' && github.base_ref == 'master'))
    
    
    steps:
    # Step 1: Lint, unit test, build
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
        
    - name: Enable Corepack
      run: corepack enable
        
    - name: Setup Yarn
      run: corepack prepare yarn@${{ env.YARN_VERSION }} --activate
        
    - name: Install dependencies
      run: yarn install --immutable
      
    - name: Run linting
      run: yarn lint
      
    - name: Run tests
      run: yarn test
      env:
        NODE_ENV: test
        AWS_REGION: ${{ env.AWS_REGION }}
        AWS_ACCESS_KEY_ID: test
        AWS_SECRET_ACCESS_KEY: test
        TABLE_NAME: ${{ env.TABLE_NAME }}
        QUEUE_NAME: ${{ env.QUEUE_NAME }}
        S3_BUCKET: ${{ env.S3_BUCKET }}
        
    - name: Build application
      run: yarn build
      
    # Step 3: Determine environment and tags
    - name: Determine environment and tags
      id: env-info
      run: |
        # For pull requests, use base_ref (target branch)
        # For push events, use ref (source branch)
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          BRANCH="${{ github.base_ref }}"
        else
          BRANCH="${{ github.ref }}"
          BRANCH="${BRANCH#refs/heads/}"
        fi
        
        if [[ "$BRANCH" == "master" ]]; then
          echo "environment=production" >> $GITHUB_OUTPUT
          echo "tag=production" >> $GITHUB_OUTPUT
        elif [[ "$BRANCH" == "staging" ]]; then
          echo "environment=staging" >> $GITHUB_OUTPUT
          echo "tag=staging" >> $GITHUB_OUTPUT
        else
          echo "‚ùå This workflow should only run on staging or master branches"
          echo "Current branch/target: $BRANCH"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Base ref: ${{ github.base_ref }}"
          exit 1
        fi
        
    # Docker build/push moved to CD. CI only validates app (lint/tests/build) now.
        
    # Step 6: Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.env-info.outputs.tag }}-build-artifacts
        path: dist/
        retention-days: 7

