# Dockerfile.dev-aws-deployed - Development AWS Deployed Environment
# This Dockerfile is optimized for running the application on AWS in a development context

# Use Node.js 22 Alpine as base image
FROM node:22-alpine AS base

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apk add --no-cache \
    curl \
    dumb-init \
    && rm -rf /var/cache/apk/*

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001

# Use non-root user
USER nestjs

# Copy package files
COPY --chown=nestjs:nodejs package.json yarn.lock .yarnrc.yml ./

# Install dependencies
RUN yarn install --immutable

# Copy source code
COPY --chown=nestjs:nodejs . .

# Build the application
RUN yarn build

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Set environment variables for dev-aws-deployed
ENV NODE_ENV=development
ENV AWS_CONNECTION_MODE=aws
ENV PORT=3000

# Start the application
ENTRYPOINT ["dumb-init", "--"]
CMD ["yarn", "start:prod"]
